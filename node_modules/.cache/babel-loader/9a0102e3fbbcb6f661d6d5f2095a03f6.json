{"ast":null,"code":"var _jsxFileName = \"/Users/usamabhatti/Documents/amazona/frontend/src/screens/MapScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { LoadScript, GoogleMap, StandaloneSearchBox, Marker } from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultLocation = {\n  lat: 45.516,\n  lng: -73.56\n};\nconst libs = ['places'];\nexport default function MapScreen() {\n  _s();\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const navigate = useNavigate();\n  const [googleApiKey, setGoogleApiKey] = useState('');\n  const [center, setCenter] = useState(defaultLocation);\n  const [location, setLocation] = useState(center);\n  const mapRef = useRef(null);\n  const placeRef = useRef(null);\n  const markerRef = useRef(null);\n\n  const getUserCurrentLocation = () => {\n    if (!navigator.geolocation) {\n      alert('Geolocation os not supported by this browser');\n    } else {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        setLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const fetch = async () => {\n      const {\n        data\n      } = await axios('/api/keys/google', {\n        headers: {\n          Authorization: `BEARER ${userInfo.token}`\n        }\n      });\n      setGoogleApiKey(data.key);\n      getUserCurrentLocation();\n    };\n\n    fetch();\n    ctxDispatch({\n      type: 'SET_FULLBOX_ON'\n    });\n  }, [ctxDispatch, userInfo]);\n\n  const onLoad = map => {\n    mapRef.current = map;\n  };\n\n  const onIdle = () => {\n    setLocation({\n      lat: mapRef.current.center.lat(),\n      lng: mapRef.current.center.lng()\n    });\n  };\n\n  const onLoadPlaces = place => {\n    placeRef.current = place;\n  };\n\n  const onPlacesChanged = () => {\n    const place = placeRef.current.getPlaces()[0].geometry.location;\n    setCenter({\n      lat: place.lat(),\n      lng: place.lng()\n    });\n    setLocation({\n      lat: place.lat(),\n      lng: place.lng()\n    });\n  };\n\n  const onMarkerLoad = marker => {\n    markerRef.current = marker;\n  };\n\n  const onConfirm = () => {\n    const places = placeRef.current.getPlaces() || [{}];\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',\n      payload: {\n        lat: location.lat,\n        lng: location.lng,\n        address: places[0].formatted_address,\n        name: places[0].name,\n        vicinity: places[0].vicinity,\n        googleAddressId: places[0].id\n      }\n    });\n    toast.success('location selected successfully.');\n    navigate('/shipping');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-box\",\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      libraries: libs,\n      googleMapsApiKey: googleApiKey,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"sample-map\",\n        mapContainerStyle: {\n          height: '100%',\n          width: '100%'\n        },\n        center: center,\n        zoom: 15,\n        onLoad: onLoad,\n        onIdle: onIdle,\n        children: [/*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n          onLoad: onLoadPlaces,\n          onPlacesChanged: onPlacesChanged,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter your address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              onClick: onConfirm,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: location,\n          onLoad: onMarkerLoad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MapScreen, \"tH02IKR5jF0yL2d3j48WCjJosTQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MapScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapScreen\");","map":{"version":3,"names":["axios","React","useContext","useEffect","useRef","useState","LoadScript","GoogleMap","StandaloneSearchBox","Marker","useNavigate","Store","Button","toast","defaultLocation","lat","lng","libs","MapScreen","state","dispatch","ctxDispatch","userInfo","navigate","googleApiKey","setGoogleApiKey","center","setCenter","location","setLocation","mapRef","placeRef","markerRef","getUserCurrentLocation","navigator","geolocation","alert","getCurrentPosition","position","coords","latitude","longitude","fetch","data","headers","Authorization","token","key","type","onLoad","map","current","onIdle","onLoadPlaces","place","onPlacesChanged","getPlaces","geometry","onMarkerLoad","marker","onConfirm","places","payload","address","formatted_address","name","vicinity","googleAddressId","id","success","height","width"],"sources":["/Users/usamabhatti/Documents/amazona/frontend/src/screens/MapScreen.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport {\n    LoadScript,\n    GoogleMap,\n    StandaloneSearchBox,\n    Marker,\n} from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\nconst libs = ['places'];\n\nexport default function MapScreen() {\n    const { state, dispatch: ctxDispatch } = useContext(Store);\n    const { userInfo } = state;\n    const navigate = useNavigate();\n    const [googleApiKey, setGoogleApiKey] = useState('');\n    const [center, setCenter] = useState(defaultLocation);\n    const [location, setLocation] = useState(center);\n\n    const mapRef = useRef(null);\n    const placeRef = useRef(null);\n    const markerRef = useRef(null);\n\n    const getUserCurrentLocation = () => {\n        if (!navigator.geolocation) {\n            alert('Geolocation os not supported by this browser');\n        } else {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setCenter({\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude,\n                });\n                setLocation({\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude,\n                });\n            });\n        }\n    }\n\n    useEffect(() => {\n        const fetch = async () => {\n            const { data } = await axios('/api/keys/google', {\n                headers: { Authorization: `BEARER ${userInfo.token}` },\n            });\n\n            setGoogleApiKey(data.key);\n            getUserCurrentLocation();\n        };\n\n        fetch();\n\n        ctxDispatch({ type: 'SET_FULLBOX_ON' });\n    }, [ctxDispatch, userInfo]);\n\n    const onLoad = (map) => {\n        mapRef.current = map;\n    };\n\n    const onIdle = () => {\n        setLocation({\n            lat: mapRef.current.center.lat(),\n            lng: mapRef.current.center.lng(),\n        });\n    };\n\n    const onLoadPlaces = (place) => {\n        placeRef.current = place;\n    };\n\n    const onPlacesChanged = () => {\n        const place = placeRef.current.getPlaces()[0].geometry.location;\n        setCenter({ lat: place.lat(), lng: place.lng() });\n        setLocation({ lat: place.lat(), lng: place.lng() });\n    };\n\n    const onMarkerLoad = (marker) => {\n        markerRef.current = marker;\n    };\n\n    const onConfirm = () => {\n        const places = placeRef.current.getPlaces() || [{}];\n        ctxDispatch({\n            type: 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',\n            payload: {\n                lat: location.lat,\n                lng: location.lng,\n                address: places[0].formatted_address,\n                name: places[0].name,\n                vicinity: places[0].vicinity,\n                googleAddressId: places[0].id,\n            },\n        });\n\n        toast.success('location selected successfully.');\n        navigate('/shipping');\n    };\n\n    return (\n        <div className=\"full-box\">\n            <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\n                <GoogleMap\n                    id=\"sample-map\"\n                    mapContainerStyle={{ height: '100%', width: '100%' }}\n                    center={center}\n                    zoom={15}\n                    onLoad={onLoad}\n                    onIdle={onIdle}\n                >\n                    <StandaloneSearchBox\n                        onLoad={onLoadPlaces}\n                        onPlacesChanged={onPlacesChanged}\n                    >\n                        <div className=\"map-input-box\">\n                            <input type=\"text\" placeholder=\"Enter your address\"></input>\n                            <Button type=\"button\" onClick={onConfirm}>\n                                Confirm\n                            </Button>\n                        </div>\n                    </StandaloneSearchBox>\n                    <Marker position={location} onLoad={onMarkerLoad}></Marker>\n                </GoogleMap>\n            </LoadScript>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}