[{"/Users/usamabhatti/Documents/amazona/frontend/src/index.js":"1","/Users/usamabhatti/Documents/amazona/frontend/src/reportWebVitals.js":"2","/Users/usamabhatti/Documents/amazona/frontend/src/Store.js":"3","/Users/usamabhatti/Documents/amazona/frontend/src/App.js":"4","/Users/usamabhatti/Documents/amazona/frontend/src/utils.js":"5","/Users/usamabhatti/Documents/amazona/frontend/src/screens/SigninScreen.js":"6","/Users/usamabhatti/Documents/amazona/frontend/src/screens/SignupScreen.js":"7","/Users/usamabhatti/Documents/amazona/frontend/src/screens/ShippingAddressScreen.js":"8","/Users/usamabhatti/Documents/amazona/frontend/src/screens/PlaceOrderScreen.js":"9","/Users/usamabhatti/Documents/amazona/frontend/src/screens/ProfileScreen.js":"10","/Users/usamabhatti/Documents/amazona/frontend/src/screens/PaymentMethodScreen.js":"11","/Users/usamabhatti/Documents/amazona/frontend/src/screens/OrderHistoryScreen.js":"12","/Users/usamabhatti/Documents/amazona/frontend/src/screens/OrderScreen.js":"13","/Users/usamabhatti/Documents/amazona/frontend/src/screens/CartScreen.js":"14","/Users/usamabhatti/Documents/amazona/frontend/src/screens/HomeScreen.js":"15","/Users/usamabhatti/Documents/amazona/frontend/src/screens/ProductScreen.js":"16","/Users/usamabhatti/Documents/amazona/frontend/src/screens/DashboardScreen.js":"17","/Users/usamabhatti/Documents/amazona/frontend/src/screens/SearchScreen.js":"18","/Users/usamabhatti/Documents/amazona/frontend/src/screens/OrderListScreen.js":"19","/Users/usamabhatti/Documents/amazona/frontend/src/screens/ProductListScreen.js":"20","/Users/usamabhatti/Documents/amazona/frontend/src/screens/ProductEditScreen.js":"21","/Users/usamabhatti/Documents/amazona/frontend/src/screens/UserListScreen.js":"22","/Users/usamabhatti/Documents/amazona/frontend/src/screens/UserEditScreen.js":"23","/Users/usamabhatti/Documents/amazona/frontend/src/screens/SupportScreen.js":"24","/Users/usamabhatti/Documents/amazona/frontend/src/screens/SellerScreen.js":"25","/Users/usamabhatti/Documents/amazona/frontend/src/screens/MapScreen.js":"26","/Users/usamabhatti/Documents/amazona/frontend/src/components/ProtectedRoute.js":"27","/Users/usamabhatti/Documents/amazona/frontend/src/components/SellerRoute.js":"28","/Users/usamabhatti/Documents/amazona/frontend/src/components/AdminRoute.js":"29","/Users/usamabhatti/Documents/amazona/frontend/src/components/SearchBox.js":"30","/Users/usamabhatti/Documents/amazona/frontend/src/components/ChatBox.js":"31","/Users/usamabhatti/Documents/amazona/frontend/src/components/CheckoutSteps.js":"32","/Users/usamabhatti/Documents/amazona/frontend/src/components/LoadingBox.js":"33","/Users/usamabhatti/Documents/amazona/frontend/src/components/MessageBox.js":"34","/Users/usamabhatti/Documents/amazona/frontend/src/components/Rating.js":"35","/Users/usamabhatti/Documents/amazona/frontend/src/components/Product.js":"36"},{"size":947,"mtime":1730579961691,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1730579961691,"results":"39","hashOfConfig":"38"},{"size":3330,"mtime":1730579961690,"results":"40","hashOfConfig":"38"},{"size":12208,"mtime":1730730009770,"results":"41","hashOfConfig":"38"},{"size":159,"mtime":1730579961694,"results":"42","hashOfConfig":"38"},{"size":2633,"mtime":1730663518699,"results":"43","hashOfConfig":"38"},{"size":3655,"mtime":1730579961693,"results":"44","hashOfConfig":"38"},{"size":5137,"mtime":1730579961693,"results":"45","hashOfConfig":"38"},{"size":8271,"mtime":1730579961692,"results":"46","hashOfConfig":"38"},{"size":5807,"mtime":1730579961693,"results":"47","hashOfConfig":"38"},{"size":2482,"mtime":1730579961692,"results":"48","hashOfConfig":"38"},{"size":3782,"mtime":1730579961691,"results":"49","hashOfConfig":"38"},{"size":13500,"mtime":1730579961692,"results":"50","hashOfConfig":"38"},{"size":5902,"mtime":1730579961691,"results":"51","hashOfConfig":"38"},{"size":3343,"mtime":1730666136201,"results":"52","hashOfConfig":"38"},{"size":13774,"mtime":1730579961692,"results":"53","hashOfConfig":"38"},{"size":4089,"mtime":1730665688286,"results":"54","hashOfConfig":"38"},{"size":11295,"mtime":1730579961693,"results":"55","hashOfConfig":"38"},{"size":5931,"mtime":1730579961692,"results":"56","hashOfConfig":"38"},{"size":7658,"mtime":1730579961692,"results":"57","hashOfConfig":"38"},{"size":10879,"mtime":1730579961692,"results":"58","hashOfConfig":"38"},{"size":5334,"mtime":1730579961693,"results":"59","hashOfConfig":"38"},{"size":5348,"mtime":1730579961693,"results":"60","hashOfConfig":"38"},{"size":7397,"mtime":1730579961693,"results":"61","hashOfConfig":"38"},{"size":5424,"mtime":1730579961693,"results":"62","hashOfConfig":"38"},{"size":4184,"mtime":1730579961691,"results":"63","hashOfConfig":"38"},{"size":313,"mtime":1730579961690,"results":"64","hashOfConfig":"38"},{"size":331,"mtime":1730579961691,"results":"65","hashOfConfig":"38"},{"size":329,"mtime":1730579961690,"results":"66","hashOfConfig":"38"},{"size":1225,"mtime":1730579961690,"results":"67","hashOfConfig":"38"},{"size":3701,"mtime":1730579961690,"results":"68","hashOfConfig":"38"},{"size":518,"mtime":1730579961690,"results":"69","hashOfConfig":"38"},{"size":242,"mtime":1730579961690,"results":"70","hashOfConfig":"38"},{"size":167,"mtime":1730579961690,"results":"71","hashOfConfig":"38"},{"size":1465,"mtime":1730668779583,"results":"72","hashOfConfig":"38"},{"size":2347,"mtime":1730669039437,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"axz5pl",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/usamabhatti/Documents/amazona/frontend/src/index.js",[],[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/reportWebVitals.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/Store.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/App.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/utils.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/SigninScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/SignupScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/ShippingAddressScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/PlaceOrderScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/ProfileScreen.js",["186"],[],"import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'UPDATE_REQUEST':\n            return { ...state, loadingUpdate: true };\n        case 'UPDATE_SUCCESS':\n            return { ...state, loadingUpdate: false };\n        case 'UPDATE_FAIL':\n            return { ...state, loadingUpdate: false };\n\n        default:\n            return state;\n    }\n};\n\nexport default function ProfileScreen() {\n    const { state, dispatch: ctxDispatch } = useContext(Store);\n    const { userInfo } = state;\n    const [name, setName] = useState(userInfo.name);\n    const [email, setEmail] = useState(userInfo.email);\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [sellerName, setSellerName] = useState('');\n    const [sellerLogo, setSellerLogo] = useState('');\n    const [sellerDescription, setSellerDescription] = useState('');\n\n    const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n        loadingUpdate: false,\n    });\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n\n        const updatedData = {\n            name,\n            email,\n            password,\n            sellerName,\n            sellerLogo,\n            sellerDescription\n        }\n\n        try {\n            const { data } = await axios.put('/api/users/profile',\n                updatedData,\n                {\n                    headers: { Authorization: `Bearer ${userInfo.token}` },\n                }\n            );\n\n            dispatch({ type: 'UPDATE_SUCCESS' });\n\n            ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n            localStorage.setItem('userInfo', JSON.stringify(data));\n            toast.success('User updated successfully');\n        } catch (err) {\n            dispatch({ type: 'FETCH_FAIL' });\n            toast.error(getError(err));\n        }\n    };\n\n    return (\n        <div className=\"container small-container\">\n            <Helmet>\n                <title>User Profile</title>\n            </Helmet>\n            <h1 className=\"my-3\">User Profile</h1>\n            <form onSubmit={submitHandler}>\n                <Form.Group className=\"mb-3\" controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"name\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"password\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                </Form.Group>\n                {userInfo.isSeller && (\n                    <>\n                        <h2>Seller</h2>\n                        <Form.Group className=\"mb-3\" controlId=\"sellerName\">\n                            <Form.Label>Seller Name</Form.Label>\n                            <Form.Control\n                                id=\"sellerName\"\n                                type=\"text\"\n                                placeholder=\"Enter Seller Name\"\n                                value={sellerName}\n                                onChange={(e) => setSellerName(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"sellerLogo\">\n                            <Form.Label>Seller Logo</Form.Label>\n                            <Form.Control\n                                id=\"sellerLogo\"\n                                type=\"url\"\n                                placeholder=\"Enter Seller Logo\"\n                                value={sellerLogo}\n                                onChange={(e) => setSellerLogo(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"sellerDescription\">\n                            <Form.Label>Seller Description</Form.Label>\n                            <Form.Control\n                                id=\"sellerDescription\"\n                                type=\"text\"\n                                placeholder=\"Enter Seller Description\"\n                                value={sellerDescription}\n                                onChange={(e) => setSellerDescription(e.target.value)}\n                            />\n                        </Form.Group>\n                    </>\n                )}\n                <div className=\"mb-3\">\n                    <Button disabled={loadingUpdate} type=\"submit\">Update</Button>\n                </div>\n            </form>\n        </div>\n    );\n}","/Users/usamabhatti/Documents/amazona/frontend/src/screens/PaymentMethodScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/OrderHistoryScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/OrderScreen.js",["187"],[],"import React, { useContext, useEffect, useReducer } from 'react'\nimport Card from 'react-bootstrap/esm/Card';\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/esm/Row';\nimport ListGroup from 'react-bootstrap/esm/ListGroup';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { Store } from '../Store';\nimport axios from 'axios';\nimport { getError } from '../utils';\nimport { PayPalButtons, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_REQUEST':\n            return { ...state, loading: true, error: '' };\n        case 'FETCH_SUCCESS':\n            return { ...state, loading: false, order: action.payload, error: '' };\n        case 'FETCH_FAIL':\n            return { ...state, loading: false, error: action.payload };\n        case 'PAY_REQUEST':\n            return { ...state, loadingPay: true };\n        case 'PAY_SUCCESS':\n            return { ...state, loadingPay: false, successPay: true };\n        case 'PAY_FAIL':\n            return { ...state, loadingPay: false };\n        case 'PAY_RESET':\n            return { ...state, loadingPay: false, successPay: false };\n        case 'DELIVER_REQUEST':\n            return { ...state, loadingDeliver: true };\n        case 'DELIVER_SUCCESS':\n            return { ...state, loadingDeliver: false, successDeliver: true };\n        case 'DELIVER_FAIL':\n            return { ...state, loadingDeliver: false };\n        case 'DELIVER_RESET':\n            return {\n                ...state,\n                loadingDeliver: false,\n                successDeliver: false,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default function OrderScreen() {\n    const { state } = useContext(Store);\n    const { userInfo } = state;\n\n    const params = useParams();\n    const { id: orderId } = params;\n    const navigate = useNavigate();\n\n    const [{ loading, order, error, loadingPay, successPay, loadingDeliver, successDeliver }, dispatch] = useReducer(reducer, {\n        loading: true,\n        order: {},\n        error: '',\n        loadingPay: false,\n        successPay: false,\n    });\n\n    const [{ isPending }, paypalDispatch] = usePayPalScriptReducer();\n\n    function createOrder(data, actions) {\n        return actions.order\n            .create({\n                purchase_units: [\n                    {\n                        amount: { value: order.totalPrice },\n                    },\n                ],\n            })\n            .then((orderID) => {\n                return orderID;\n            });\n    }\n\n    function onApprove(data, actions) {\n        return actions.order.capture().then(async function (details) {\n            try {\n                dispatch({ type: 'PAY_REQUEST' });\n\n                const { data } = await axios.put(`/api/orders/${order._id}/pay`,\n                    details,\n                    {\n                        headers: { authorization: `Bearer ${userInfo.token}` },\n                    }\n                );\n\n                dispatch({ type: 'PAY_SUCCESS', payload: data });\n                toast.success('Order is paid');\n            } catch (err) {\n                dispatch({ type: 'PAY_FAIL', payload: getError(err) });\n                toast.error(getError(err));\n            }\n        });\n    }\n\n    function onError(err) {\n        toast.error(getError(err));\n    }\n\n    useEffect(() => {\n        const fetchOrder = async () => {\n            try {\n                dispatch({ type: 'FETCH_REQUEST' });\n\n                const { data } = await axios.get(`/api/orders/${orderId}`, {\n                    headers: { authorization: `Bearer ${userInfo.token}` }\n                });\n\n                dispatch({ type: 'FETCH_SUCCESS', payload: data });\n            } catch (err) {\n                dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n            }\n        };\n\n        if (!userInfo) return navigate('/login');\n\n        if (!order._id || successPay || successDeliver || (order._id && order._id !== orderId)) {\n            fetchOrder();\n            if (successPay) {\n                dispatch({ type: 'PAY_RESET' });\n            }\n\n            if (successDeliver) {\n                dispatch({ type: 'DELIVER_RESET' });\n            }\n        } else {\n            const loadPaypalScript = async () => {\n                const { data: clientId } = await axios.get('/api/keys/paypal', {\n                    headers: { authorization: `Bearer ${userInfo.token}` },\n                });\n\n                paypalDispatch({\n                    type: 'resetOptions',\n                    value: {\n                        'client-id': clientId,\n                        currency: 'USD',\n                    },\n                });\n\n                paypalDispatch({ type: 'setLoadingStatus', value: 'pending' });\n            };\n            // loadPaypalScript();\n        }\n    }, [order, userInfo, orderId, navigate, paypalDispatch, successPay, successDeliver]);\n\n    async function deliverOrderHandler() {\n        try {\n            dispatch({ type: 'DELIVER_REQUEST' });\n            const { data } = await axios.put(\n                `/api/orders/${order._id}/deliver`,\n                {},\n                {\n                    headers: { authorization: `Bearer ${userInfo.token}` },\n                }\n            );\n            dispatch({ type: 'DELIVER_SUCCESS', payload: data });\n            toast.success('Order is delivered');\n        } catch (err) {\n            toast.error(getError(err));\n            dispatch({ type: 'DELIVER_FAIL' });\n        }\n    }\n\n    return loading ? (\n        <LoadingBox />\n    ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n        <div>\n            <Helmet>\n                <title>Order {orderId}</title>\n            </Helmet>\n            <h1 className=\"my-3\">Order {orderId}</h1>\n            <Row>\n                <Col md={8}>\n                    <Card className=\"mb-3\">\n                        <Card.Body>\n                            <Card.Title>Shipping</Card.Title>\n                            <Card.Text>\n                                <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                                <strong>Address: </strong> {order.shippingAddress.address},\n                                {order.shippingAddress.city}, {order.shippingAddress.postalCode}\n                                ,{order.shippingAddress.country}\n                                &nbsp;\n                                {order.shippingAddress.location &&\n                                    order.shippingAddress.location.lat && (\n                                        <a\n                                            target=\"_new\"\n                                            href={`https://maps.google.com?q=${order.shippingAddress.location.lat},${order.shippingAddress.location.lng}`}\n                                        >\n                                            Show On Map\n                                        </a>\n                                    )}\n                            </Card.Text>\n                            {order.isDelivered ? (\n                                <MessageBox variant=\"success\">\n                                    Delivered at {order.deliveredAt}\n                                </MessageBox>\n                            ) : (\n                                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n                            )}\n                        </Card.Body>\n                    </Card>\n                    <Card className=\"mb-3\">\n                        <Card.Body>\n                            <Card.Title>Payment</Card.Title>\n                            <Card.Text>\n                                <strong>Method:</strong> {order.paymentMethod}\n                            </Card.Text>\n                            {order.isPaid ? (\n                                <MessageBox variant=\"success\">\n                                    Paid at {order.paidAt}\n                                </MessageBox>\n                            ) : (\n                                <MessageBox variant=\"danger\">Not Paid</MessageBox>\n                            )}\n                        </Card.Body>\n                    </Card>\n\n                    <Card className=\"mb-3\">\n                        <Card.Body>\n                            <Card.Title>Items</Card.Title>\n                            <ListGroup variant=\"flush\">\n                                {order.orderItems.map((item) => (\n                                    <ListGroup.Item key={item._id}>\n                                        <Row className=\"align-items-center\">\n                                            <Col md={6}>\n                                                <img\n                                                    src={item.image}\n                                                    alt={item.name}\n                                                    className=\"img-fluid rounded img-thumbnail\"\n                                                ></img>{' '}\n                                                <Link to={`/product/${item.slug}`}>{item.name}</Link>\n                                            </Col>\n                                            <Col md={3}>\n                                                <span>{item.quantity}</span>\n                                            </Col>\n                                            <Col md={3}>${item.price}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={4}>\n                    <Card className=\"mb-3\">\n                        <Card.Body>\n                            <Card.Title>Order Summary</Card.Title>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Items</Col>\n                                        <Col>${order.itemsPrice.toFixed(2)}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Shipping</Col>\n                                        <Col>${order.shippingPrice.toFixed(2)}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Tax</Col>\n                                        <Col>${order.taxPrice.toFixed(2)}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                            <strong> Order Total</strong>\n                                        </Col>\n                                        <Col>\n                                            <strong>${order.totalPrice.toFixed(2)}</strong>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                {!order.isPaid && (\n                                    <ListGroup.Item>\n                                        {isPending ? (\n                                            <LoadingBox />\n                                        ) : (\n                                            <div>\n                                                <PayPalButtons\n                                                    createOrder={createOrder}\n                                                    onApprove={onApprove}\n                                                    onError={onError}\n                                                ></PayPalButtons>\n                                            </div>\n                                        )}\n                                        {loadingPay && <LoadingBox />}\n                                    </ListGroup.Item>\n                                )}\n                                {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        {loadingDeliver && <LoadingBox></LoadingBox>}\n                                        <div className=\"d-grid\">\n                                            <Button type=\"button\" onClick={deliverOrderHandler}>\n                                                Deliver Order\n                                            </Button>\n                                        </div>\n                                    </ListGroup.Item>\n                                )}\n                            </ListGroup>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n","/Users/usamabhatti/Documents/amazona/frontend/src/screens/CartScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/HomeScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/ProductScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/DashboardScreen.js",[],[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/SearchScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/OrderListScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/ProductListScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/ProductEditScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/UserListScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/UserEditScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/SupportScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/SellerScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/screens/MapScreen.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/ProtectedRoute.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/SellerRoute.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/AdminRoute.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/SearchBox.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/ChatBox.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/CheckoutSteps.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/LoadingBox.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/MessageBox.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/Rating.js",[],[],"/Users/usamabhatti/Documents/amazona/frontend/src/components/Product.js",[],[],{"ruleId":"188","severity":1,"message":"189","line":30,"column":12,"nodeType":"190","messageId":"191","endLine":30,"endColumn":27},{"ruleId":"188","severity":1,"message":"192","line":135,"column":19,"nodeType":"190","messageId":"191","endLine":135,"endColumn":35},"no-unused-vars","'confirmPassword' is assigned a value but never used.","Identifier","unusedVar","'loadPaypalScript' is assigned a value but never used."]